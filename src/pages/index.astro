---
import Layout from '../layouts/Layout.astro';
import { queryReposForUser } from '../utils/githubRepos';
import GithubProject from '../components/GithubProject.astro';
import type Repo from '../types/Repo';

const me = {
  names: 'Ramón Martín',
  lastName: 'Huidobro',
  githubUsername: 'hola-soy-milk',
};

const fullName = [me.names, me.lastName].join(' ');

const repos = await queryReposForUser(me.githubUsername);
---

<Layout title={`${fullName}: Speaker, Developer, Educator`}>
  <main>
    <h1>Hey there, I'm <span class="text-gradient">{me.names}</span></h1>
    <ul role="list" class="repo-grid">
      {repos.map((repo: Repo) => <GithubProject repo={repo} />)}
    </ul>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
  .repo-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
